apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  labels:
    app:  nginx
spec:
  containers:
  - name: my-container
    image: nginx:latest
    volumeMounts:
    - name: my-pv-storage
      mountPath: /usr/share/nginx/html
  volumes:
  - name: my-pv-storage
    persistentVolumeClaim:
      claimName: my-pvc
  restartPolicy: Always

---

apiVersion: v1
kind: Pod
metadata:
  name: my-pod2
  labels:
    app:  nginx2
spec:
  containers:
  - name: my-container2
    image: nginx:latest
    volumeMounts:
    - name: my-pv-storage2
      mountPath: /usr/share/nginx/html
  volumes:
  - name: my-pv-storage2
    persistentVolumeClaim:
      claimName: my-pvc2
  restartPolicy: Always

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-pvc
  namespace: default
spec:
  storageClassName: standart
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
      
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-pvc2
  namespace: default
spec:
  storageClassName: standart
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: default
spec:
  selector:
    app: nginx
  type: NodePort
  ports:
  - name: nginx
    protocol: TCP
    port: 80
    targetPort: 80
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    nodePort: 30100

---

apiVersion: v1
kind: Service
metadata:
  name: nginx2
  namespace: default
spec:
  selector:
    app: nginx2
  type: NodePort
  ports:
  - name: nginx
    protocol: TCP
    port: 8080
    targetPort: 80
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    nodePort: 30101